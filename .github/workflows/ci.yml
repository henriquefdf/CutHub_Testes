name: CI

# Dispara em push e pull request na branch main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    # Matrix para rodar em Linux, macOS e Windows, com Node 18.x
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x]

    # # Serviço de MySQL que será iniciado no runner
    # services:
    #   mysql:
    #     image: mysql:latestl
    #     env:
    #       MYSQL_ROOT_PASSWORD: pwd
    #       MYSQL_DATABASE: cuthub
    #     ports:
    #       - 3306:3306

    defaults:
      run:
        working-directory: ./api

    steps:
      # 1) Pega o código do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Instala a versão de Node definida na matrix
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 3) Instala as dependências do back-end
      - name: Install dependencies
        run: npm ci

      # 4) Gera o client do Prisma
      - name: Generate Prisma client
        run: npx prisma generate

      # 5) Executa os testes com coverage
      - name: Run tests with coverage
        run: npm test -- --coverage
        env:
          NODE_ENV: test

# +     # --------------------------------------------------------
# +     # Quando já tiver CODECOV_TOKEN no Secrets
# +     # --------------------------------------------------------
# +     - name: Upload coverage to Codecov
# +       uses: codecov/codecov-action@v3
# +       with:
# +         files: ./coverage/*.json
# +         token: ${{ secrets.CODECOV_TOKEN }}
