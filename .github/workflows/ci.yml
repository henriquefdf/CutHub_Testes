name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x]      # use a LTS única em todas as máquinas

    # todos os comandos abaixo executam dentro de ./api
    defaults:
      run:
        working-directory: ./api
        shell: bash 

    steps:
      # 1) Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Node
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 3) Constrói o .env a partir dos Secrets
      - name: Create .env file from secrets
        run: |
          echo "APP_URL=${{ secrets.APP_URL }}"                >> .env
          echo "PORT=${{ secrets.PORT }}"                      >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"      >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}"          >> .env
          echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}"  >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"           >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"   >> .env
          echo "AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }}"           >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}"               >> .env
          echo "EMAIL_ACCOUNT=${{ secrets.EMAIL_ACCOUNT }}"    >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}"  >> .env
          echo "NODE_ENV=test"                                 >> .env

      # 4) Dependências
      - name: Install dependencies
        run: npm ci

      # 5) Prisma
      - name: Generate Prisma client
        run: npx prisma generate

      # 6) Testes + cobertura
      - name: Run tests with coverage
        run: npm test -- --coverage --runInBand --detectOpenHandles

      # 7) Enviar cobertura ao Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./api/coverage

